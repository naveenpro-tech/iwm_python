"""Add active_role field to users table

Revision ID: 1131c429e4be
Revises: f62516a11780
Create Date: 2025-10-29 21:32:18.677356

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1131c429e4be'
down_revision: Union[str, Sequence[str], None] = 'f62516a11780'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_critic_analytics_date'), 'critic_analytics', type_='unique')
    op.drop_constraint(op.f('uq_critic_follower'), 'critic_followers', type_='unique')
    op.drop_constraint(op.f('critic_profiles_external_id_key'), 'critic_profiles', type_='unique')
    op.drop_constraint(op.f('critic_profiles_username_key'), 'critic_profiles', type_='unique')
    op.drop_index(op.f('idx_critic_profile_role_profile_id'), table_name='critic_profiles')
    op.drop_index(op.f('ix_critic_profiles_external_id'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_external_id'), 'critic_profiles', ['external_id'], unique=True)
    op.drop_index(op.f('ix_critic_profiles_user_id'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_user_id'), 'critic_profiles', ['user_id'], unique=True)
    op.drop_index(op.f('ix_critic_profiles_username'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_username'), 'critic_profiles', ['username'], unique=True)
    op.create_index(op.f('ix_critic_profiles_role_profile_id'), 'critic_profiles', ['role_profile_id'], unique=False)
    op.drop_constraint(op.f('critic_review_comments_external_id_key'), 'critic_review_comments', type_='unique')
    op.drop_index(op.f('ix_critic_review_comments_external_id'), table_name='critic_review_comments')
    op.create_index(op.f('ix_critic_review_comments_external_id'), 'critic_review_comments', ['external_id'], unique=True)
    op.drop_constraint(op.f('uq_review_like'), 'critic_review_likes', type_='unique')
    op.drop_constraint(op.f('critic_reviews_external_id_key'), 'critic_reviews', type_='unique')
    op.drop_constraint(op.f('critic_reviews_slug_key'), 'critic_reviews', type_='unique')
    op.drop_index(op.f('ix_critic_reviews_external_id'), table_name='critic_reviews')
    op.create_index(op.f('ix_critic_reviews_external_id'), 'critic_reviews', ['external_id'], unique=True)
    op.drop_index(op.f('ix_critic_reviews_slug'), table_name='critic_reviews')
    op.create_index(op.f('ix_critic_reviews_slug'), 'critic_reviews', ['slug'], unique=True)
    op.drop_constraint(op.f('critic_verification_applications_external_id_key'), 'critic_verification_applications', type_='unique')
    op.drop_index(op.f('ix_critic_verification_applications_external_id'), table_name='critic_verification_applications')
    op.create_index(op.f('ix_critic_verification_applications_external_id'), 'critic_verification_applications', ['external_id'], unique=True)
    op.drop_index(op.f('idx_industry_accepting_projects'), table_name='industry_profiles')
    op.drop_index(op.f('idx_industry_profile_role_profile_id'), table_name='industry_profiles')
    op.drop_index(op.f('idx_industry_profile_user_id'), table_name='industry_profiles')
    op.drop_constraint(op.f('uq_industry_profile_user_id'), 'industry_profiles', type_='unique')
    op.drop_index(op.f('idx_talent_availability_status'), table_name='talent_profiles')
    op.drop_index(op.f('idx_talent_profile_role_profile_id'), table_name='talent_profiles')
    op.drop_index(op.f('idx_talent_profile_user_id'), table_name='talent_profiles')
    op.drop_constraint(op.f('uq_talent_profile_user_id'), 'talent_profiles', type_='unique')
    op.drop_index(op.f('idx_user_default_role'), table_name='user_role_profiles', postgresql_where='((is_default = true) AND (enabled = true))')
    op.drop_index(op.f('idx_user_role_type'), table_name='user_role_profiles')
    op.drop_index(op.f('idx_visibility'), table_name='user_role_profiles')
    op.drop_constraint(op.f('uq_user_role_type'), 'user_role_profiles', type_='unique')
    op.add_column('users', sa.Column('active_role', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'active_role')
    op.create_unique_constraint(op.f('uq_user_role_type'), 'user_role_profiles', ['user_id', 'role_type'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_visibility'), 'user_role_profiles', ['visibility'], unique=False)
    op.create_index(op.f('idx_user_role_type'), 'user_role_profiles', ['user_id', 'role_type'], unique=False)
    op.create_index(op.f('idx_user_default_role'), 'user_role_profiles', ['user_id'], unique=False, postgresql_where='((is_default = true) AND (enabled = true))')
    op.create_unique_constraint(op.f('uq_talent_profile_user_id'), 'talent_profiles', ['user_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_talent_profile_user_id'), 'talent_profiles', ['user_id'], unique=False)
    op.create_index(op.f('idx_talent_profile_role_profile_id'), 'talent_profiles', ['role_profile_id'], unique=False)
    op.create_index(op.f('idx_talent_availability_status'), 'talent_profiles', ['availability_status'], unique=False)
    op.create_unique_constraint(op.f('uq_industry_profile_user_id'), 'industry_profiles', ['user_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_industry_profile_user_id'), 'industry_profiles', ['user_id'], unique=False)
    op.create_index(op.f('idx_industry_profile_role_profile_id'), 'industry_profiles', ['role_profile_id'], unique=False)
    op.create_index(op.f('idx_industry_accepting_projects'), 'industry_profiles', ['accepting_projects'], unique=False)
    op.drop_index(op.f('ix_critic_verification_applications_external_id'), table_name='critic_verification_applications')
    op.create_index(op.f('ix_critic_verification_applications_external_id'), 'critic_verification_applications', ['external_id'], unique=False)
    op.create_unique_constraint(op.f('critic_verification_applications_external_id_key'), 'critic_verification_applications', ['external_id'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_critic_reviews_slug'), table_name='critic_reviews')
    op.create_index(op.f('ix_critic_reviews_slug'), 'critic_reviews', ['slug'], unique=False)
    op.drop_index(op.f('ix_critic_reviews_external_id'), table_name='critic_reviews')
    op.create_index(op.f('ix_critic_reviews_external_id'), 'critic_reviews', ['external_id'], unique=False)
    op.create_unique_constraint(op.f('critic_reviews_slug_key'), 'critic_reviews', ['slug'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('critic_reviews_external_id_key'), 'critic_reviews', ['external_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_review_like'), 'critic_review_likes', ['review_id', 'user_id'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_critic_review_comments_external_id'), table_name='critic_review_comments')
    op.create_index(op.f('ix_critic_review_comments_external_id'), 'critic_review_comments', ['external_id'], unique=False)
    op.create_unique_constraint(op.f('critic_review_comments_external_id_key'), 'critic_review_comments', ['external_id'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_critic_profiles_role_profile_id'), table_name='critic_profiles')
    op.drop_index(op.f('ix_critic_profiles_username'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_username'), 'critic_profiles', ['username'], unique=False)
    op.drop_index(op.f('ix_critic_profiles_user_id'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_user_id'), 'critic_profiles', ['user_id'], unique=False)
    op.drop_index(op.f('ix_critic_profiles_external_id'), table_name='critic_profiles')
    op.create_index(op.f('ix_critic_profiles_external_id'), 'critic_profiles', ['external_id'], unique=False)
    op.create_index(op.f('idx_critic_profile_role_profile_id'), 'critic_profiles', ['role_profile_id'], unique=False)
    op.create_unique_constraint(op.f('critic_profiles_username_key'), 'critic_profiles', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('critic_profiles_external_id_key'), 'critic_profiles', ['external_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_critic_follower'), 'critic_followers', ['critic_id', 'user_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_critic_analytics_date'), 'critic_analytics', ['critic_id', 'date'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
