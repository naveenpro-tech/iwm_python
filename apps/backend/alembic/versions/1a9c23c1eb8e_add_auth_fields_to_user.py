"""add auth fields to user

Revision ID: 1a9c23c1eb8e
Revises: 965837e1ff41
Create Date: 2025-10-18 17:38:57.407206

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1a9c23c1eb8e'
down_revision: Union[str, Sequence[str], None] = '965837e1ff41'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Add columns as nullable first to avoid issues with existing rows
    op.add_column('users', sa.Column('email', sa.String(length=200), nullable=True))
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))

    # Backfill existing rows with placeholder values
    op.execute("""
        UPDATE users
        SET
            email = COALESCE(email, external_id || '@local'),
            hashed_password = COALESCE(hashed_password, ''),
            created_at = COALESCE(created_at, NOW())
    """)

    # Now enforce NOT NULL and add unique index
    op.alter_column('users', 'email', existing_type=sa.String(length=200), nullable=False)
    op.alter_column('users', 'hashed_password', existing_type=sa.String(length=255), nullable=False)
    op.alter_column('users', 'created_at', existing_type=sa.DateTime(), nullable=False)

    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###
